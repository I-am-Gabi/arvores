#BlueJ class context
comment0.params=
comment0.target=Tree()
comment0.text=\r\n\ Construtor\ que\ inicializar\ a\ raiz\ como\ nula\r\n
comment1.params=pessoa
comment1.target=Node\ add(Pessoa)
comment1.text=\r\n\ addNode\ -\ m\u00E9todo\ chamado\ para\ adicionar\ um\ n\u00F3\ na\ \u00E1rvore\r\n\ \r\n\ @params\ pessoa\ O\ objeto\ pessoa\ que\ seja\ adicionado\ em\ um\ n\u00F3\ da\ \u00E1rvore\r\n
comment10.params=node
comment10.target=int\ calcHeight(Node)
comment11.params=node
comment11.target=int\ calcDepht(Node)
comment12.params=node\ array
comment12.target=void\ roamPrefix(Node,\ java.util.ArrayList)
comment13.params=
comment13.target=Node\ lowerValue()
comment14.params=node
comment14.target=Node\ lowerValue(Node)
comment15.params=
comment15.target=Node\ greaterValue()
comment16.params=node
comment16.target=Node\ greaterValue(Node)
comment16.text=\r\n\ \ \r\n
comment17.params=
comment17.target=void\ printPrefix()
comment18.params=node
comment18.target=void\ printPrefix(Node)
comment19.params=
comment19.target=void\ printPosfix()
comment2.params=node\ pessoa
comment2.target=Node\ add(Node,\ Pessoa)
comment2.text=\r\n\ add\ -\ m\u00E9todo\ que\ adiciona\ efetivamente\ um\ valor\ em\ um\ determinado\ n\u00F3.\ Ele\ verifica\ pelo\ valor\ o\ nome\ se\ a\ \r\n\ inst\u00E2ncia\ passada\ de\ Pessoa\ deve\ ficar\ a\ esquerda\ ou\ a\ direita\ do\ n\u00F3.\r\n\ \r\n\ @params\ node\ n\u00F3\ que\ ter\u00E1\ os\ filhos\ verificados\ para\ um\ deles\ ser\ preenchido\r\n\ @params\ pessoa\ inst\u00E2ncia\ que\ ser\u00E1\ atribuida\ ao\ campo\ Data\ do\ n\u00F3\ adicionado\r\n
comment20.params=node
comment20.target=void\ printPosfix(Node)
comment21.params=
comment21.target=Node\ getRoot()
comment21.text=\r\n\ getRoot()\ -\ M\u00E9todo\ que\ retorna\ o\ n\u00F3\ raiz\ da\ \u00E1rvore\r\n\ @return\ root\ raiz\ da\ arvore\ \r\n
comment22.params=
comment22.target=void\ CreatePeople()
comment3.params=to
comment3.target=void\ remove(Node)
comment4.params=q
comment4.target=void\ removeLower(Node)
comment5.params=name
comment5.target=Node\ searchBreadth(java.lang.String)
comment6.params=name
comment6.target=Node\ searchDepth(java.lang.String)
comment6.text=\r\n\ search\ -\ m\u00E9todo\ chamada\ para\ pesquisar\ registro\ por\ nome.\ \r\n\ \r\n\ @params\ name\ String\ nome\ que\ ser\u00E1\ usada\ para\ a\ busca\r\n\ @return\ no\ Node\ encontrado\ pelo\ nome\r\n
comment7.params=node\ name
comment7.target=Node\ searchDepth(Node,\ java.lang.String)
comment8.params=CPF
comment8.target=boolean\ hasNode(java.lang.String)
comment8.text=\r\n\ hasNode\ -\ m\u00E9todo\ chamado\ quando\ queremos\ verificar\ se\ h\u00E1\ registro\ com\ o\ CPF\ passado\ por\ par\u00E2metro\r\n\ \r\n\ @params\ CPF\ valor\ do\ CPF\ que\ ser\u00E1\ usado\ para\ verificar\ a\ exist\u00EAncia\ de\ um\ registro\ semelhante\r\n\ @return\ True\ caso\ tenha\ encontrado,\ ou\ False\ caso\ contr\u00E1rio\r\n
comment9.params=node\ CPF
comment9.target=boolean\ seachCPF(Node,\ java.lang.String)
numComments=23
