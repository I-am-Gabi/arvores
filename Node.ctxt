#BlueJ class context
comment0.params=degree\ value
comment0.target=Node(int,\ int)
comment1.params=person\ value
comment1.target=Node(Pessoa,\ int)
comment1.text=\r\n\ Construtor\ padr\u00E3o\r\n\ @param\ Pessoa\ que\ ser\u00E1\ atribu\u00EDda\ a\ este\ n\u00F3.\r\n
comment10.params=
comment10.target=java.util.ArrayList\ getChildrens()
comment11.params=pessoa
comment11.target=Node\ search(Pessoa)
comment11.text=\r\n\ Fiz\ essa\ fun\u00E7\u00E3o\ de\ busca\ acredito\ que\ fiz\ busca\ por\ profundidade,\ \r\n\ pq\ ele\ verifica\ se\ n\u00F3\ atual\ \u00E9\ a\ pessoa\ procurada,\ se\ n\u00E3o\ for,\ passa\ para\ o\ filho\ e\ isso\r\n\ se\ repete\ para\ todos\ os\ filhos\ do\ root.\r\n
comment12.params=pessoa
comment12.target=Node\ searchLargura(Pessoa)
comment13.params=
comment13.target=boolean\ isRoot()
comment13.text=\r\n\ @return\ true\ \:\ Se\ \u00E9\ raiz\r\n\ false\:\ se\ n\u00E3o\ \u00E9\ raiz\r\n
comment2.params=parent
comment2.target=void\ setParent(Node)
comment2.text=\r\n\ @param\ Node\ parent\ \:\ Define\ o\ n\u00F3\ que\ \u00E9\ pai\ deste\ atual\r\n
comment3.params=person
comment3.target=void\ setData(Pessoa)
comment3.text=\r\n\ @param\ Pessoa\ person\ \:\ Atribui\ uma\ pessoa\ a\ este\ n\u00F3\r\n
comment4.params=degree
comment4.target=void\ setDegree(int)
comment5.params=brother
comment5.target=void\ setBrother(Node)
comment6.params=
comment6.target=Node\ getBrother()
comment7.params=
comment7.target=int\ getDegree()
comment8.params=
comment8.target=Pessoa\ getData()
comment8.text=\r\n\ @return\ Pessoa\ \:\ retorna\ a\ pessoa\ atribuida\ a\ este\ n\u00F3\r\n
comment9.params=children
comment9.target=boolean\ addChildren(Node)
numComments=14
